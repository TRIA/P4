#include "packet.npl"
#include "constants.npl"

parser_node start {
    root_node : 1; 
    switch (obj_bus.port_type_cfg) {
        0x3     :   next_node ethernet;
        default :   next_node ingress;
    }
}

parser_node ethernet {
    // Specify which header instance to extract here
    // - All fields of a specified header instance are extracted here
    // - Packet parsing pointer also moves extract_fields
    extract_fields(ingress_pkt.l2_hdr.l2); 

    if (control_id.ts_enable == 0) { 
        if (control_id.otpid_enable[3:3] && latest.ethertype == VLAN_ETYPE) {
            // 0x8100 VLAN-tagged frame (IEEE 802.1Q) and Shortest Path Bridging
            // IEEE 802.1aq with NNI compatibility[10]
            print("Inside latest.ethertype = 0x8100\n");
            next_node vlan;
        } 
        
        if (latest.ethertype == EFCP_ETYPE) {
            // 0x0D1F
            print("Inside latest.ethertype = 0xD1F\n");
            next_node efcp;
        }

        if (latest.ethertype == IPv4_ETYPE) {
            // 0x0800
            print("Inside latest.ethertype = 0x0800\n");
            next_node ipv4;
        }                    
    } else {
        next_node ingress;
    }
}

parser_node vlan {
    print("Inside parser_node vlan\n");
    extract_fields(ingress_pkt.l2_hdr.vlan);

    if (latest.ethertype == IPv4_ETYPE) {
        next_node ipv4;
    } else if (latest.ethertype == EFCP_ETYPE) {
        next_node efcp;
    }    
}

parser_node efcp {
    print("Inside parser_node efcp\n");
    extract_fields(ingress_pkt.efcp_hdr.efcp);
    // Save pdutype value in order to evaluate later in egress processing whether
    // the packet should be dropped or not.
    obj_bus.pdutype = ingress_pkt.efcp_hdr.efcp.pdutype; 
    print("In parser, obj_bus.pdutype = 0x%x\n", obj_bus.pdutype);
    next_node ingress;
}

parser_node ipv4 {
    print("Inside parser_node ipv4\n");
    extract_fields(ingress_pkt.l3_hdr.ipv4);
    next_node ingress;
}

parser_node ingress {
    // Specify that this is the last node of this tree
    end_node : 1; 
}
